{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","cityxcity/tests/acceptance/user-can-filter-features-assets-and-parcels-test.js","cityxcity/tests/acceptance/user-can-view-index-page-test.js","cityxcity/tests/acceptance/user-can-visit-cities-page-test.js","cityxcity/tests/acceptance/user-clicks-city-and-sees-city-detail-on-map-test.js","cityxcity/tests/acceptance/user-logs-in-and-logs-out-successfully-test.js","cityxcity/tests/app.lint-test.js","cityxcity/tests/helpers/destroy-app.js","cityxcity/tests/helpers/module-for-acceptance.js","cityxcity/tests/helpers/resolver.js","cityxcity/tests/helpers/start-app.js","cityxcity/tests/integration/components/accord-item-test.js","cityxcity/tests/integration/components/basemap-menu-test.js","cityxcity/tests/integration/components/cities-grid-test.js","cityxcity/tests/integration/components/city-card-test.js","cityxcity/tests/integration/components/edit-resource-test.js","cityxcity/tests/integration/components/enumerate-properties-test.js","cityxcity/tests/integration/components/export-data-test.js","cityxcity/tests/integration/components/file-field-progress-test.js","cityxcity/tests/integration/components/file-upload-test.js","cityxcity/tests/integration/components/footer-nav-test.js","cityxcity/tests/integration/components/geojson-to-svg-test.js","cityxcity/tests/integration/components/image-layer-test.js","cityxcity/tests/integration/components/investment-accord-test.js","cityxcity/tests/integration/components/leaflet-map-test.js","cityxcity/tests/integration/components/main-map-test.js","cityxcity/tests/integration/components/main-nav-test.js","cityxcity/tests/integration/components/map-popup-test.js","cityxcity/tests/integration/components/new-investment-form-test.js","cityxcity/tests/integration/components/over-time-chart-test.js","cityxcity/tests/integration/components/parcel-accord-test.js","cityxcity/tests/integration/components/place-accord-test.js","cityxcity/tests/integration/components/popup-layer-test.js","cityxcity/tests/integration/components/related-investments-icon-test.js","cityxcity/tests/integration/components/resource-grid-test.js","cityxcity/tests/integration/components/resource-nav-menu-test.js","cityxcity/tests/integration/components/search-bar-test.js","cityxcity/tests/integration/components/select-association-test.js","cityxcity/tests/integration/components/statewide-map-test.js","cityxcity/tests/integration/components/tabbed-results-test.js","cityxcity/tests/integration/components/tdi-card-test.js","cityxcity/tests/integration/components/timeline-builder-test.js","cityxcity/tests/integration/components/timeline-edit-test.js","cityxcity/tests/integration/components/ui-search-test.js","cityxcity/tests/integration/components/ui-visibility-sticky-test.js","cityxcity/tests/test-helper.js","cityxcity/tests/tests.lint-test.js","cityxcity/tests/unit/adapters/application-test.js","cityxcity/tests/unit/adapters/city-test.js","cityxcity/tests/unit/adapters/feature-test.js","cityxcity/tests/unit/adapters/investment-test.js","cityxcity/tests/unit/adapters/parcel-test.js","cityxcity/tests/unit/controllers/application-test.js","cityxcity/tests/unit/controllers/cities-test.js","cityxcity/tests/unit/controllers/cities/city-test.js","cityxcity/tests/unit/controllers/cities/city/city-filters-test.js","cityxcity/tests/unit/controllers/cities/city/edit-investment-test.js","cityxcity/tests/unit/controllers/cities/city/edit-parcel-test.js","cityxcity/tests/unit/controllers/cities/city/features-test.js","cityxcity/tests/unit/controllers/cities/city/investments-test.js","cityxcity/tests/unit/controllers/cities/city/parcels-test.js","cityxcity/tests/unit/controllers/cities/city/show-test.js","cityxcity/tests/unit/helpers/attribute-type-test.js","cityxcity/tests/unit/helpers/consruct-related-investments-markup-test.js","cityxcity/tests/unit/helpers/get-types-for-test.js","cityxcity/tests/unit/helpers/humanize-string-test.js","cityxcity/tests/unit/helpers/is-not-empty-test.js","cityxcity/tests/unit/helpers/replace-with-test.js","cityxcity/tests/unit/helpers/split-string-test.js","cityxcity/tests/unit/initializers/component-router-injector-test.js","cityxcity/tests/unit/initializers/sort-by-date-test.js","cityxcity/tests/unit/mixins/center-map-on-geometry-test.js","cityxcity/tests/unit/models/city-test.js","cityxcity/tests/unit/models/feature-test.js","cityxcity/tests/unit/models/investment-test.js","cityxcity/tests/unit/models/parcel-test.js","cityxcity/tests/unit/models/user-test.js","cityxcity/tests/unit/routes/cities-test.js","cityxcity/tests/unit/routes/cities/city-test.js","cityxcity/tests/unit/routes/cities/city/add-data-test.js","cityxcity/tests/unit/routes/cities/city/edit-feature-test.js","cityxcity/tests/unit/routes/cities/city/edit-investment-test.js","cityxcity/tests/unit/routes/cities/city/edit-parcel-test.js","cityxcity/tests/unit/routes/cities/city/features-test.js","cityxcity/tests/unit/routes/cities/city/features/index-test.js","cityxcity/tests/unit/routes/cities/city/investments-test.js","cityxcity/tests/unit/routes/cities/city/new-feature-test.js","cityxcity/tests/unit/routes/cities/city/new-investment-test.js","cityxcity/tests/unit/routes/cities/city/parcels-test.js","cityxcity/tests/unit/serializers/district-test.js","cityxcity/tests/unit/serializers/place-test.js","cityxcity/tests/unit/services/current-city-test.js","cityxcity/tests/unit/transforms/timeline-test.js","cityxcity/tests/unit/transforms/timelinne-test.js","cityxcity/tests/unit/utils/apply-filter-to-test.js","cityxcity/tests/unit/utils/arrayify-test.js","cityxcity/tests/unit/utils/csv-factory-test.js","cityxcity/tests/unit/utils/get-latest-test.js","cityxcity/tests/unit/utils/is-any-filter-test.js","cityxcity/tests/unit/utils/is-longitudinal-filter-test.js","cityxcity/tests/unit/utils/is-true-filter-test.js","cityxcity/tests/unit/utils/is-within-filter-test.js","cityxcity/tests/unit/utils/months-between-test.js","cityxcity/tests/unit/utils/set-choropleth-color-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('cityxcity/tests/acceptance/user-can-filter-features-assets-and-parcels-test', ['mocha', 'chai', 'cityxcity/tests/helpers/start-app', 'cityxcity/tests/helpers/destroy-app'], function (_mocha, _chai, _startApp, _destroyApp) {\n  'use strict';\n\n  var RELATED_FEATURES_CHECKBOX = '.filters .features-checkbox .checkbox';\n  var RELATED_INVESTMENTS_CHECKBOX = '.filters .investments-checkbox .checkbox';\n  // const RELATED_PARCELS_CHECKBOX = '.filters .parcels-checkbox';\n  var FEATURES_CARDS = '.city-details .feature-card';\n  var INVESTMENTS_CARDS = '.city-details .investment-card';\n  var FEATURE_TYPE_FILTER = '.feature-types .checkbox';\n  var BOOLEAN_FILTER = '.other-categories .checkbox';\n\n  var INVESTMENT_TYPE_FILTER = '.investments-types .checkbox';\n\n  // const PARCELS_TYPES_FILTER = '.investment-types .checkbox';\n  // const PARCELS_BOOLEAN_FILTER = '.parcels-categories .checkbox';\n\n  (0, _mocha.describe)('Acceptance | user can filter features assets and parcels', function () {\n    var application = void 0;\n\n    (0, _mocha.beforeEach)(function () {\n      application = (0, _startApp.default)();\n    });\n\n    (0, _mocha.afterEach)(function () {\n      (0, _destroyApp.default)(application);\n    });\n\n    (0, _mocha.describe)('with features selected', function () {\n      (0, _mocha.beforeEach)(function () {\n        server.createList('city', 1);\n        visit('/cities/1/details');\n        click(RELATED_FEATURES_CHECKBOX);\n      });\n      // server.createList('city', 2);\n      (0, _mocha.it)('shows all available unfiltered features', function () {\n\n        var features = find(FEATURES_CARDS);\n        (0, _chai.expect)(features).to.have.length(11);\n      });\n\n      (0, _mocha.describe)('uses types filter', function () {\n        (0, _mocha.beforeEach)(function () {\n          click(FEATURE_TYPE_FILTER);\n        });\n\n        (0, _mocha.it)('shows filtered features', function () {\n          var features = find(FEATURES_CARDS);\n\n          (0, _chai.expect)(features).to.have.length(1);\n        });\n      });\n\n      (0, _mocha.describe)('uses boolean filter', function () {\n        (0, _mocha.beforeEach)(function () {\n          click(BOOLEAN_FILTER);\n        });\n\n        (0, _mocha.it)('shows filtered features', function () {\n          var features = find(FEATURES_CARDS);\n\n          // the unit tests might be the ones to test for record-level\n          // filtering accuracy\n          (0, _chai.expect)(features.length).to.be.below(11);\n        });\n      });\n    });\n\n    (0, _mocha.describe)('with assets selected', function () {\n      (0, _mocha.beforeEach)(function () {\n        server.createList('city', 1);\n        visit('/cities/1/details');\n        click(RELATED_INVESTMENTS_CHECKBOX);\n      });\n      // server.createList('city', 2);\n      (0, _mocha.it)('shows all available unfiltered investments', function () {\n        var investments = find(INVESTMENTS_CARDS);\n\n        (0, _chai.expect)(investments).to.have.length(11);\n      });\n\n      (0, _mocha.describe)('uses types filter', function () {\n        (0, _mocha.beforeEach)(function () {\n          click(INVESTMENT_TYPE_FILTER);\n        });\n\n        (0, _mocha.it)('shows filtered investments', function () {\n          var investments = find(INVESTMENTS_CARDS);\n\n          (0, _chai.expect)(investments).to.have.length(3);\n        });\n      });\n    });\n\n    (0, _mocha.describe)('with parcels selected', function () {\n      // server.createList('city', 2);\n      (0, _mocha.it)('shows all available unfiltered features');\n    });\n  });\n});","define('cityxcity/tests/acceptance/user-can-view-index-page-test', ['mocha', 'chai', 'cityxcity/tests/helpers/start-app', 'cityxcity/tests/helpers/destroy-app'], function (_mocha, _chai, _startApp, _destroyApp) {\n  'use strict';\n\n  (0, _mocha.describe)('Acceptance | user can view index page', function () {\n    var application = void 0;\n\n    (0, _mocha.beforeEach)(function () {\n      application = (0, _startApp.default)();\n      server.createList('city', 10);\n    });\n\n    (0, _mocha.afterEach)(function () {\n      (0, _destroyApp.default)(application);\n    });\n\n    (0, _mocha.beforeEach)(function () {\n      visit('/');\n    });\n\n    (0, _mocha.it)('can visit /', function () {\n      (0, _chai.expect)(currentURL()).to.equal('/');\n    });\n\n    (0, _mocha.it)('show a grid of city names on home page');\n  });\n});","define('cityxcity/tests/acceptance/user-can-visit-cities-page-test', ['mocha', 'chai', 'cityxcity/tests/helpers/start-app', 'cityxcity/tests/helpers/destroy-app'], function (_mocha, _chai, _startApp, _destroyApp) {\n  'use strict';\n\n  // selectors\n  var CITIES = '.ui.menu a.item';\n  var CITIES_LINK = '.cities-link';\n\n  (0, _mocha.describe)('Acceptance | user can visit cities page', function () {\n    var application = void 0;\n\n    (0, _mocha.beforeEach)(function () {\n      application = (0, _startApp.default)();\n    });\n\n    (0, _mocha.afterEach)(function () {\n      (0, _destroyApp.default)(application);\n    });\n\n    (0, _mocha.describe)('with cities', function () {\n      (0, _mocha.beforeEach)(function () {\n        server.createList('city', 2);\n        visit('/');\n      });\n\n      (0, _mocha.it)('shows two cities', function () {\n\n        var cities = find(CITIES);\n\n        // return \n        (0, _chai.expect)(cities).to.have.length(2);\n      });\n\n      (0, _mocha.describe)('click cities link', function () {\n        (0, _mocha.beforeEach)(function () {\n          // pauseTest();\n          click(CITIES_LINK);\n        });\n\n        (0, _mocha.it)(\"doesn't show cities\", function () {\n          (0, _chai.expect)(currentURL()).to.equal('/cities');\n        });\n\n        (0, _mocha.it)(\"shows a map\", function () {\n          (0, _chai.expect)(find('.leaflet-container').height()).to.be.above(0);\n          (0, _chai.expect)(find('.leaflet-container').width()).to.be.above(0);\n        });\n        (0, _mocha.it)(\"show a sidebar\", function () {\n          (0, _chai.expect)(find('.cities-sidebar')).to.be.ok;\n        });\n      });\n    });\n\n    (0, _mocha.describe)('without cities', function () {\n      (0, _mocha.beforeEach)(function () {\n        visit('/');\n      });\n\n      (0, _mocha.it)(\"doesn't show cities\", function () {\n        var cities = find(CITIES);\n\n        (0, _chai.expect)(cities).to.have.length(0);\n      });\n    });\n  });\n});","define('cityxcity/tests/acceptance/user-clicks-city-and-sees-city-detail-on-map-test', ['mocha', 'chai', 'cityxcity/tests/helpers/start-app', 'cityxcity/tests/helpers/destroy-app'], function (_mocha, _chai, _startApp, _destroyApp) {\n  'use strict';\n\n  var CITY_LINK = '.ui.menu a.item';\n  var CITY_DETAIL_NAME = '.cities-sidebar h1';\n  var CITY_MARKER = '.leaflet-marker-icon';\n\n  (0, _mocha.describe)('Acceptance | user clicks city and sees city detail on map', function () {\n    var application = void 0;\n\n    (0, _mocha.beforeEach)(function () {\n      application = (0, _startApp.default)();\n    });\n\n    (0, _mocha.afterEach)(function () {\n      (0, _destroyApp.default)(application);\n    });\n\n    (0, _mocha.describe)('with cities', function () {\n      // let city;\n      // let second_city;\n      (0, _mocha.beforeEach)(function () {\n        server.create('city', { name: 'Worcester' });\n        // second_city = server.create('city', { name: 'Springfield' });\n        visit('/');\n      });\n\n      (0, _mocha.describe)('click a city', function () {\n        (0, _mocha.beforeEach)(function () {\n          click(CITY_LINK);\n        });\n\n        (0, _mocha.it)('shows city detail', function () {\n          // let city_name = city.name;\n          (0, _chai.expect)(find(CITY_DETAIL_NAME).text()).to.equal('Worcester');\n        });\n\n        (0, _mocha.it)('shows city marker', function () {\n          (0, _chai.expect)(find(CITY_MARKER)).to.be.ok;\n        });\n\n        // describe('clicks another marker and transitions route', function() {\n        //   let second_marker = $(CITY_MARKER)[1];\n        //   click(second_marker);\n\n        //   it('transitions route', function() {\n        //     expect(currentURL()).to.be('/cities/2');\n        //   });\n\n        //   it('recenters map', function() {\n        //     let controller = application.getController(\"cities\");\n        //     let latitude = controller.get('latitude');\n\n        //     expect(latitude).to.equal(second_city.latitude);\n\n        //   });\n        // });\n      });\n    });\n  });\n});","define('cityxcity/tests/acceptance/user-logs-in-and-logs-out-successfully-test', ['mocha', 'chai', 'cityxcity/tests/helpers/start-app', 'cityxcity/tests/helpers/destroy-app'], function (_mocha, _chai, _startApp, _destroyApp) {\n  'use strict';\n\n  var LOGIN_LINK = '.login-link';\n  var EMAIL_FIELD = '.login-username';\n  var PASSWORD_FIELD = '.login-password';\n  var LOGIN_BUTTON = '.login-submit';\n  var LOGOUT_LINK = '.logout-link';\n\n  (0, _mocha.describe)('Acceptance | user logs in and logs out successfully', function () {\n    var application = void 0;\n\n    (0, _mocha.beforeEach)(function () {\n      application = (0, _startApp.default)();\n    });\n\n    (0, _mocha.afterEach)(function () {\n      (0, _destroyApp.default)(application);\n    });\n\n    (0, _mocha.describe)('show index', function () {\n      (0, _mocha.beforeEach)(function () {\n        server.createList('user', 2);\n        visit('/');\n      });\n\n      (0, _mocha.describe)('click login link', function () {\n        (0, _mocha.beforeEach)(function () {\n          click(LOGIN_LINK);\n          fillIn(EMAIL_FIELD, 'user@email.com');\n          fillIn(PASSWORD_FIELD, 'user@email.com');\n        });\n\n        (0, _mocha.it)(\"shows login boxes\", function () {\n          (0, _chai.expect)(currentURL()).to.equal(\"/login\");\n        });\n\n        (0, _mocha.describe)('logging in', function () {\n          (0, _mocha.beforeEach)(function () {\n            click(LOGIN_BUTTON);\n          });\n\n          (0, _mocha.it)('logs the user in', function () {\n            (0, _chai.expect)(currentURL()).to.equal('/');\n            (0, _chai.expect)(find(LOGOUT_LINK).text(), 'Logout');\n          });\n        });\n      });\n    });\n  });\n});","define('cityxcity/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('adapters/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('adapters/city.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'adapters/city.js should pass ESLint\\n\\n6:25 - \\'modelName\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('adapters/parcel.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/parcel.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/accord-item.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/accord-item.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/basemap-menu.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/basemap-menu.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/cities-grid.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/cities-grid.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/city-card.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/city-card.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/edit-resource.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/edit-resource.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/enumerate-properties.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/enumerate-properties.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/export-data.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/export-data.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/file-field-progress.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/file-field-progress.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/file-upload.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/file-upload.js should pass ESLint\\n\\n10:10 - \\'Ember\\' is not defined. (no-undef)\\n21:30 - \\'e\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('components/footer-nav.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/footer-nav.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/geojson-to-svg.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/geojson-to-svg.js should pass ESLint\\n\\n7:9 - \\'mapW\\' is assigned a value but never used. (no-unused-vars)\\n8:9 - \\'mapH\\' is assigned a value but never used. (no-unused-vars)\\n9:22 - \\'d3\\' is not defined. (no-undef)\\n13:16 - \\'d3\\' is not defined. (no-undef)\\n17:15 - \\'d3\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('components/image-layer.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/image-layer.js should pass ESLint\\n\\n1:8 - \\'Ember\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('components/investment-accord.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/investment-accord.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/main-map.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/main-map.js should pass ESLint\\n\\n6:9 - \\'alias\\' is assigned a value but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('components/main-nav.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/main-nav.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/map-popup.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/map-popup.js should pass ESLint\\n\\n25:16 - \\'event\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('components/new-investment-form.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/new-investment-form.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/over-time-chart.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/over-time-chart.js should pass ESLint\\n\\n3:10 - \\'nest\\' is defined but never used. (no-unused-vars)\\n24:9 - \\'openDates\\' is assigned a value but never used. (no-unused-vars)\\n57:9 - \\'that\\' is assigned a value but never used. (no-unused-vars)\\n158:39 - \\'c3\\' is defined but never used. (no-unused-vars)\\n161:7 - \\'d3\\' is not defined. (no-undef)\\n162:25 - \\'element\\' is defined but never used. (no-unused-vars)\\n165:7 - \\'d3\\' is not defined. (no-undef)\\n171:12 - \\'value\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('components/parcel-accord.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/parcel-accord.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/place-accord.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/place-accord.js should pass ESLint\\n\\n2:9 - \\'computed\\' is assigned a value but never used. (no-unused-vars)\\n8:9 - \\'m\\' is assigned a value but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('components/related-investments-icon.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/related-investments-icon.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/resource-grid.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/resource-grid.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/resource-nav-menu.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/resource-nav-menu.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/search-bar.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-bar.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/select-association.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/select-association.js should pass ESLint\\n\\n2:8 - \\'isAnyFilter\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('components/statewide-map.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/statewide-map.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/tabbed-results.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/tabbed-results.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/tdi-card.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/tdi-card.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/timeline-builder.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/timeline-builder.js should pass ESLint\\n\\n8:29 - \\'Em\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('components/timeline-edit.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/timeline-edit.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/ui-search.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/ui-search.js should pass ESLint\\n\\n16:7 - \\'$\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('components/ui-visibility-sticky.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/ui-visibility-sticky.js should pass ESLint\\n\\n13:11 - Duplicate key \\'offset\\'. (no-dupe-keys)');\n  });\n\n  QUnit.test('controllers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/cities.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/cities.js should pass ESLint\\n\\n41:7 - \\'$\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('controllers/cities/city.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/cities/city.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/cities/city/investments.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/cities/city/investments.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/cities/city/parcels.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/cities/city/parcels.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/cities/city/places.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/cities/city/places.js should pass ESLint\\n\\n7:11 - \\'m\\' is assigned a value but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('controllers/cities/city/show.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/cities/city/show.js should pass ESLint\\n\\n37:7 - \\'$\\' is not defined. (no-undef)\\n54:23 - \\'csvFactory\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('helpers/attribute-type.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/attribute-type.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/get-types-for.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/get-types-for.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/humanize-string.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/humanize-string.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/is-not-empty.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/is-not-empty.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/replace-with.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/replace-with.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/split-string.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/split-string.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('initializers/component-router-injector.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/component-router-injector.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('initializers/sort-by-date.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'initializers/sort-by-date.js should pass ESLint\\n\\n3:78 - Empty block statement. (no-empty)\\n17:14 - \\'i\\' is already defined. (no-redeclare)');\n  });\n\n  QUnit.test('mixins/center-map-on-geometry.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/center-map-on-geometry.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/city.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/city.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/investment.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/investment.js should pass ESLint\\n\\n79:11 - \\'estimated_amount\\' is assigned a value but never used. (no-unused-vars)\\n79:29 - \\'exact_amount\\' is assigned a value but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('models/parcel.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/parcel.js should pass ESLint\\n\\n80:34 - \\'L\\' is not defined. (no-undef)\\n85:34 - \\'L\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('models/place.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/place.js should pass ESLint\\n\\n113:5 - Unexpected console statement. (no-console)\\n130:5 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('models/user.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/user.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/cities.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/cities.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/cities/city.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/cities/city.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/cities/city/add-data.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/cities/city/add-data.js should pass ESLint\\n\\n6:9 - \\'params\\' is defined but never used. (no-unused-vars)\\n27:20 - \\'transition\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('routes/cities/city/edit-feature.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/cities/city/edit-feature.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/cities/city/edit-investment.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/cities/city/edit-investment.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/cities/city/investments.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/cities/city/investments.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/cities/city/new-feature.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/cities/city/new-feature.js should pass ESLint\\n\\n7:9 - \\'params\\' is defined but never used. (no-unused-vars)\\n25:20 - \\'transition\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('routes/cities/city/new-investment.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/cities/city/new-investment.js should pass ESLint\\n\\n6:9 - \\'params\\' is defined but never used. (no-unused-vars)\\n8:9 - \\'currentCity\\' is assigned a value but never used. (no-unused-vars)\\n25:20 - \\'transition\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('routes/cities/city/parcels.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/cities/city/parcels.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/cities/city/places.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/cities/city/places.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/cities/city/places/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/cities/city/places/index.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('serializers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('serializers/place.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/place.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('services/current-city.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'services/current-city.js should pass ESLint\\n\\n3:26 - \\'getFilter\\' is defined but never used. (no-unused-vars)\\n18:11 - \\'PARCEL_OWNERSHIP_TYPES\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('transforms/jsonstring.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transforms/jsonstring.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('transforms/timeline.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transforms/timeline.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('transforms/timelinne.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transforms/timelinne.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('transitions.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'transitions.js should pass ESLint\\n\\n14:2 - Unnecessary semicolon. (no-extra-semi)');\n  });\n\n  QUnit.test('utils/apply-filter-to.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/apply-filter-to.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('utils/arrayify.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/arrayify.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('utils/csv-factory.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/csv-factory.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('utils/get-latest.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'utils/get-latest.js should pass ESLint\\n\\n5:45 - \\'moment\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('utils/is-any-filter.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/is-any-filter.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('utils/is-longitudinal-filter.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'utils/is-longitudinal-filter.js should pass ESLint\\n\\n16:11 - \\'parsedSubsequentDate\\' is assigned a value but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('utils/is-true-filter.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/is-true-filter.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('utils/is-within-filter.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/is-within-filter.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('utils/months-between.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'utils/months-between.js should pass ESLint\\n\\n4:15 - \\'moment\\' is not defined. (no-undef)\\n5:13 - \\'moment\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('utils/set-choropleth-color.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/set-choropleth-color.js should pass ESLint\\n\\n');\n  });\n});","define('cityxcity/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  function destroyApp(application) {\n    Ember.run(application, 'destroy');\n  }\n});","define('cityxcity/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'cityxcity/tests/helpers/start-app', 'cityxcity/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  };\n\n  var resolve = Ember.RSVP.resolve;\n});","define('cityxcity/tests/helpers/resolver', ['exports', 'cityxcity/resolver', 'cityxcity/config/environment'], function (exports, _resolver, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n\n  exports.default = resolver;\n});","define('cityxcity/tests/helpers/start-app', ['exports', 'cityxcity/app', 'cityxcity/config/environment'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  function startApp(attrs) {\n    var attributes = Ember.merge({}, _environment.default.APP);\n    attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n    return Ember.run(function () {\n      var application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('cityxcity/tests/integration/components/accord-item-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('accord-item', 'Integration | Component | accord item', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"vrRWSKpB\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"accord-item\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"VVzFsRX4\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"accord-item\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('cityxcity/tests/integration/components/basemap-menu-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('basemap-menu', 'Integration | Component | basemap menu', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#basemap-menu}}\n      //     template content\n      //   {{/basemap-menu}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"wAozCqvo\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"basemap-menu\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/cities-grid-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('cities-grid', 'Integration | Component | cities grid', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#cities-grid}}\n      //     template content\n      //   {{/cities-grid}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"iGM94F0E\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"cities-grid\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/city-card-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('city-card', 'Integration | Component | city card', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#city-card}}\n      //     template content\n      //   {{/city-card}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"X1Haicu4\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"city-card\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/edit-resource-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('edit-resource', 'Integration | Component | edit resource', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#edit-resource}}\n      //     template content\n      //   {{/edit-resource}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"VgVBsyS2\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"edit-resource\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/enumerate-properties-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('enumerate-properties', 'Integration | Component | enumerate properties', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#enumerate-properties}}\n      //     template content\n      //   {{/enumerate-properties}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"yvexL0zz\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"enumerate-properties\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/export-data-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('export-data', 'Integration | Component | export data', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#export-data}}\n      //     template content\n      //   {{/export-data}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"OdOQxm33\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"export-data\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/file-field-progress-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('file-field-progress', 'Integration | Component | file field progress', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#file-field-progress}}\n      //     template content\n      //   {{/file-field-progress}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"Dk25nXP3\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"file-field-progress\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/file-upload-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('file-upload', 'Integration | Component | file upload', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#file-upload}}\n      //     template content\n      //   {{/file-upload}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"aj90Kxhq\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"file-upload\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/footer-nav-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('footer-nav', 'Integration | Component | footer nav', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"r6+SqBYp\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"footer-nav\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"iEw2OO2r\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"footer-nav\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('cityxcity/tests/integration/components/geojson-to-svg-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('geojson-to-svg', 'Integration | Component | geojson to svg', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#geojson-to-svg}}\n      //     template content\n      //   {{/geojson-to-svg}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"2yj2lhHc\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"geojson-to-svg\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/image-layer-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('image-layer', 'Integration | Component | image layer', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#image-layer}}\n      //     template content\n      //   {{/image-layer}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"OyVwU2SK\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"image-layer\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/investment-accord-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('investment-accord', 'Integration | Component | investment accord', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"1vMJEIVw\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"investment-accord\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"Vya8w4Uq\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"investment-accord\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('cityxcity/tests/integration/components/leaflet-map-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('leaflet-map', 'Integration | Component | leaflet map', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#leaflet-map}}\n      //     template content\n      //   {{/leaflet-map}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"pvbFmyCg\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"leaflet-map\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/main-map-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('main-map', 'Integration | Component | main map', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#main-map}}\n      //     template content\n      //   {{/main-map}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"LvnG1c3q\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"main-map\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/main-nav-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('main-nav', 'Integration | Component | main nav', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"PCHf5sYH\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"main-nav\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"J7wxiES6\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"main-nav\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('cityxcity/tests/integration/components/map-popup-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('map-popup', 'Integration | Component | map popup', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#map-popup}}\n      //     template content\n      //   {{/map-popup}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"JDPlVm3v\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"map-popup\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/new-investment-form-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('new-investment-form', 'Integration | Component | new investment form', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#new-investment-form}}\n      //     template content\n      //   {{/new-investment-form}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"M5MigHkP\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"new-investment-form\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/over-time-chart-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('over-time-chart', 'Integration | Component | over time chart', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#over-time-chart}}\n      //     template content\n      //   {{/over-time-chart}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"f7dYiwLs\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"over-time-chart\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/parcel-accord-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('parcel-accord', 'Integration | Component | parcel accord', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"2OjNNZzx\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"parcel-accord\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"tKq3HVpR\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"parcel-accord\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('cityxcity/tests/integration/components/place-accord-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('place-accord', 'Integration | Component | place accord', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"6IkHlT3V\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"place-accord\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"77p48a/z\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"place-accord\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('cityxcity/tests/integration/components/popup-layer-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('popup-layer', 'Integration | Component | popup layer', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#popup-layer}}\n      //     template content\n      //   {{/popup-layer}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"kZP+tppj\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"popup-layer\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/related-investments-icon-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('related-investments-icon', 'Integration | Component | related investments icon', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#related-investments-icon}}\n      //     template content\n      //   {{/related-investments-icon}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"f8pE/LGI\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"related-investments-icon\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/resource-grid-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('resource-grid', 'Integration | Component | resource grid', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#resource-grid}}\n      //     template content\n      //   {{/resource-grid}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"JnpM7O0b\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"resource-grid\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/resource-nav-menu-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('resource-nav-menu', 'Integration | Component | resource nav menu', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#resource-nav-menu}}\n      //     template content\n      //   {{/resource-nav-menu}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"VE/9P2JD\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"resource-nav-menu\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/search-bar-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('search-bar', 'Integration | Component | search bar', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"tlJ6Y+u+\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"search-bar\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"tWxfyg0C\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"search-bar\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('cityxcity/tests/integration/components/select-association-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('select-association', 'Integration | Component | select association', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#select-association}}\n      //     template content\n      //   {{/select-association}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"8BOSQG6p\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"select-association\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/statewide-map-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('statewide-map', 'Integration | Component | statewide map', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#statewide-map}}\n      //     template content\n      //   {{/statewide-map}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"x5UOZcRd\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"statewide-map\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/tabbed-results-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('tabbed-results', 'Integration | Component | tabbed results', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#tabbed-results}}\n      //     template content\n      //   {{/tabbed-results}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"BrcrzMKx\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"tabbed-results\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/tdi-card-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('tdi-card', 'Integration | Component | tdi card', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#tdi-card}}\n      //     template content\n      //   {{/tdi-card}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"qi+4spWw\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"tdi-card\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/timeline-builder-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('timeline-builder', 'Integration | Component | timeline builder', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#timeline-builder}}\n      //     template content\n      //   {{/timeline-builder}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"+OZblLzZ\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"timeline-builder\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/timeline-edit-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('timeline-edit', 'Integration | Component | timeline edit', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#timeline-edit}}\n      //     template content\n      //   {{/timeline-edit}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"Jsi0+JxA\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"timeline-edit\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/ui-search-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('ui-search', 'Integration | Component | ui search', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#ui-search}}\n      //     template content\n      //   {{/ui-search}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"aV/qFZuk\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"ui-search\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/integration/components/ui-visibility-sticky-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeComponent)('ui-visibility-sticky', 'Integration | Component | ui visibility sticky', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#ui-visibility-sticky}}\n      //     template content\n      //   {{/ui-visibility-sticky}}\n      // `);\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"ZpPx2MF4\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"ui-visibility-sticky\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});","define('cityxcity/tests/test-helper', ['cityxcity/tests/helpers/resolver', 'ember-qunit', 'ember-cli-qunit'], function (_resolver, _emberQunit, _emberCliQunit) {\n  'use strict';\n\n  (0, _emberQunit.setResolver)(_resolver.default);\n  (0, _emberCliQunit.start)();\n});","define('cityxcity/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('acceptance/user-can-filter-features-assets-and-parcels-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'acceptance/user-can-filter-features-assets-and-parcels-test.js should pass ESLint\\n\\n32:7 - \\'server\\' is not defined. (no-undef)\\n74:7 - \\'server\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('acceptance/user-can-view-index-page-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'acceptance/user-can-view-index-page-test.js should pass ESLint\\n\\n11:5 - \\'server\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('acceptance/user-can-visit-cities-page-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'acceptance/user-can-visit-cities-page-test.js should pass ESLint\\n\\n23:7 - \\'server\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('acceptance/user-clicks-city-and-sees-city-detail-on-map-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'acceptance/user-clicks-city-and-sees-city-detail-on-map-test.js should pass ESLint\\n\\n25:7 - \\'server\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('acceptance/user-logs-in-and-logs-out-successfully-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'acceptance/user-logs-in-and-logs-out-successfully-test.js should pass ESLint\\n\\n25:7 - \\'server\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/accord-item-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/accord-item-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/basemap-menu-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/basemap-menu-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/cities-grid-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/cities-grid-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/city-card-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/city-card-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/edit-resource-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/edit-resource-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/enumerate-properties-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/enumerate-properties-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/export-data-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/export-data-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/file-field-progress-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/file-field-progress-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/file-upload-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/file-upload-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/footer-nav-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/footer-nav-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/geojson-to-svg-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/geojson-to-svg-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/image-layer-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/image-layer-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/investment-accord-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/investment-accord-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/leaflet-map-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/leaflet-map-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/main-map-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/main-map-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/main-nav-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/main-nav-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/map-popup-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/map-popup-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/new-investment-form-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/new-investment-form-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/over-time-chart-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/over-time-chart-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/parcel-accord-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/parcel-accord-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/place-accord-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/place-accord-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/popup-layer-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/popup-layer-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/related-investments-icon-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/related-investments-icon-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/resource-grid-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/resource-grid-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/resource-nav-menu-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/resource-nav-menu-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/search-bar-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-bar-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/select-association-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/select-association-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/statewide-map-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/statewide-map-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/tabbed-results-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/tabbed-results-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/tdi-card-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/tdi-card-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/timeline-builder-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/timeline-builder-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/timeline-edit-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/timeline-edit-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/ui-search-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/ui-search-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/ui-visibility-sticky-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/ui-visibility-sticky-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/adapters/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/application-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/adapters/city-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/city-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/adapters/feature-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/feature-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/adapters/investment-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/investment-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/adapters/parcel-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/parcel-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/application-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/cities-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/cities-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/cities/city-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/cities/city-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/cities/city/city-filters-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/cities/city/city-filters-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/cities/city/edit-investment-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/cities/city/edit-investment-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/cities/city/edit-parcel-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/cities/city/edit-parcel-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/cities/city/features-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/cities/city/features-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/cities/city/investments-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/cities/city/investments-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/cities/city/parcels-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/cities/city/parcels-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/cities/city/show-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/cities/city/show-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/helpers/attribute-type-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/attribute-type-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/helpers/consruct-related-investments-markup-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/consruct-related-investments-markup-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/helpers/get-types-for-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/get-types-for-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/helpers/humanize-string-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/humanize-string-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/helpers/is-not-empty-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/is-not-empty-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/helpers/replace-with-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/replace-with-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/helpers/split-string-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/split-string-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/initializers/component-router-injector-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'unit/initializers/component-router-injector-test.js should pass ESLint\\n\\n17:3 - \\'afterEach\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('unit/initializers/sort-by-date-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'unit/initializers/sort-by-date-test.js should pass ESLint\\n\\n17:3 - \\'afterEach\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('unit/mixins/center-map-on-geometry-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/center-map-on-geometry-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/city-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/city-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/feature-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/feature-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/investment-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/investment-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/parcel-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/parcel-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/user-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/user-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/cities-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cities-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/cities/city-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cities/city-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/cities/city/add-data-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cities/city/add-data-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/cities/city/edit-feature-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cities/city/edit-feature-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/cities/city/edit-investment-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cities/city/edit-investment-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/cities/city/edit-parcel-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cities/city/edit-parcel-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/cities/city/features-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cities/city/features-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/cities/city/features/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cities/city/features/index-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/cities/city/investments-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cities/city/investments-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/cities/city/new-feature-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cities/city/new-feature-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/cities/city/new-investment-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cities/city/new-investment-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/cities/city/parcels-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cities/city/parcels-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/serializers/district-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/district-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/serializers/place-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/place-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/services/current-city-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/current-city-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/transforms/timeline-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/transforms/timeline-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/transforms/timelinne-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/transforms/timelinne-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/apply-filter-to-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/apply-filter-to-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/arrayify-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/arrayify-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/csv-factory-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/csv-factory-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/get-latest-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/get-latest-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/is-any-filter-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/is-any-filter-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/is-longitudinal-filter-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/is-longitudinal-filter-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/is-true-filter-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/is-true-filter-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/is-within-filter-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/is-within-filter-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/months-between-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/months-between-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/set-choropleth-color-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/set-choropleth-color-test.js should pass ESLint\\n\\n');\n  });\n});","define('cityxcity/tests/unit/adapters/application-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var adapter = this.subject();\n      (0, _chai.expect)(adapter).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/adapters/city-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('adapter:city', 'Unit | Adapter | city', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var adapter = this.subject();\n      (0, _chai.expect)(adapter).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/adapters/feature-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('adapter:feature', 'Unit | Adapter | feature', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var adapter = this.subject();\n      (0, _chai.expect)(adapter).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/adapters/investment-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('adapter:investment', 'Unit | Adapter | investment', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var adapter = this.subject();\n      (0, _chai.expect)(adapter).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/adapters/parcel-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('adapter:parcel', 'Unit | Adapter | parcel', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var adapter = this.subject();\n      (0, _chai.expect)(adapter).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/controllers/application-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('controller:application', 'Unit | Controller | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var controller = this.subject();\n      (0, _chai.expect)(controller).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/controllers/cities-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('controller:cities', 'Unit | Controller | cities', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var controller = this.subject();\n      (0, _chai.expect)(controller).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/controllers/cities/city-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('controller:cities/city', 'Unit | Controller | cities/city', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var controller = this.subject();\n      (0, _chai.expect)(controller).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/controllers/cities/city/city-filters-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('controller:cities/city/show', 'Unit | Controller | cities/city/city filters', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var controller = this.subject();\n      (0, _chai.expect)(controller).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/controllers/cities/city/edit-investment-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('controller:cities/city/edit-investment', 'Unit | Controller | cities/city/edit investment', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var controller = this.subject();\n      (0, _chai.expect)(controller).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/controllers/cities/city/edit-parcel-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('controller:cities/city/edit-parcel', 'Unit | Controller | cities/city/edit parcel', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var controller = this.subject();\n      (0, _chai.expect)(controller).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/controllers/cities/city/features-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('controller:cities/city/features', 'Unit | Controller | cities/city/features', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var controller = this.subject();\n      (0, _chai.expect)(controller).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/controllers/cities/city/investments-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('controller:cities/city/investments', 'Unit | Controller | cities/city/investments', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var controller = this.subject();\n      (0, _chai.expect)(controller).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/controllers/cities/city/parcels-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('controller:cities/city/parcels', 'Unit | Controller | cities/city/parcels', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var controller = this.subject();\n      (0, _chai.expect)(controller).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/controllers/cities/city/show-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('controller:cities/city/show', 'Unit | Controller | cities/city/show', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var controller = this.subject();\n      (0, _chai.expect)(controller).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/helpers/attribute-type-test', ['chai', 'mocha', 'cityxcity/helpers/attribute-type'], function (_chai, _mocha, _attributeType) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Helper | attribute type', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _attributeType.attributeType)(42);\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/helpers/consruct-related-investments-markup-test', ['chai', 'mocha', 'cityxcity/helpers/consruct-related-investments-markup'], function (_chai, _mocha, _consructRelatedInvestmentsMarkup) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Helper | consruct related investments markup', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _consructRelatedInvestmentsMarkup.consructRelatedInvestmentsMarkup)(42);\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/helpers/get-types-for-test', ['chai', 'mocha', 'cityxcity/helpers/get-types-for'], function (_chai, _mocha, _getTypesFor) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Helper | get types for', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _getTypesFor.getTypesFor)(42);\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/helpers/humanize-string-test', ['chai', 'mocha', 'cityxcity/helpers/humanize-string'], function (_chai, _mocha, _humanizeString) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Helper | humanize string', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _humanizeString.humanizeString)(42);\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/helpers/is-not-empty-test', ['chai', 'mocha', 'cityxcity/helpers/is-not-empty'], function (_chai, _mocha, _isNotEmpty) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Helper | is not empty', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _isNotEmpty.isNotEmpty)(42);\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/helpers/replace-with-test', ['chai', 'mocha', 'cityxcity/helpers/replace-with'], function (_chai, _mocha, _replaceWith) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Helper | replace with', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _replaceWith.replaceWith)(42);\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/helpers/split-string-test', ['chai', 'mocha', 'cityxcity/helpers/split-string'], function (_chai, _mocha, _splitString) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Helper | split string', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _splitString.splitString)(42);\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/initializers/component-router-injector-test', ['chai', 'mocha', 'cityxcity/initializers/component-router-injector', 'cityxcity/tests/helpers/destroy-app'], function (_chai, _mocha, _componentRouterInjector, _destroyApp) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Initializer | component router injector', function () {\n    var application = void 0;\n\n    (0, _mocha.beforeEach)(function () {\n      Ember.run(function () {\n        application = Ember.Application.create();\n        application.deferReadiness();\n      });\n    });\n\n    afterEach(function () {\n      (0, _destroyApp.default)(application);\n    });\n\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      (0, _componentRouterInjector.initialize)(application);\n\n      // you would normally confirm the results of the initializer here\n      (0, _chai.expect)(true).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/initializers/sort-by-date-test', ['chai', 'mocha', 'cityxcity/initializers/sort-by-date', 'cityxcity/tests/helpers/destroy-app'], function (_chai, _mocha, _sortByDate, _destroyApp) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Initializer | sort by date', function () {\n    var application = void 0;\n\n    (0, _mocha.beforeEach)(function () {\n      Ember.run(function () {\n        application = Ember.Application.create();\n        application.deferReadiness();\n      });\n    });\n\n    afterEach(function () {\n      (0, _destroyApp.default)(application);\n    });\n\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      (0, _sortByDate.initialize)(application);\n\n      // you would normally confirm the results of the initializer here\n      (0, _chai.expect)(true).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/mixins/center-map-on-geometry-test', ['chai', 'mocha', 'cityxcity/mixins/center-map-on-geometry'], function (_chai, _mocha, _centerMapOnGeometry) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Mixin | center map on geometry', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var CenterMapOnGeometryObject = Ember.Object.extend(_centerMapOnGeometry.default);\n      var subject = CenterMapOnGeometryObject.create();\n      (0, _chai.expect)(subject).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/models/city-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModel)('city', 'Unit | Model | city', {\n    // Specify the other units that are required for this test.\n    needs: ['model:feature', 'model:investment', 'model:parcel']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var model = this.subject();\n      // var store = this.store();\n      (0, _chai.expect)(model).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/models/feature-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModel)('feature', 'Unit | Model | feature', {\n    // Specify the other units that are required for this test.\n    needs: ['model:city']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var model = this.subject();\n      // var store = this.store();\n      (0, _chai.expect)(model).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/models/investment-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModel)('investment', 'Unit | Model | investment', {\n    // Specify the other units that are required for this test.\n    needs: ['model:city']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var model = this.subject();\n      // var store = this.store();\n      (0, _chai.expect)(model).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/models/parcel-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModel)('parcel', 'Unit | Model | parcel', {\n    // Specify the other units that are required for this test.\n    needs: ['model:city']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var model = this.subject();\n      // var store = this.store();\n      (0, _chai.expect)(model).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/models/user-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModel)('user', 'Unit | Model | user', {\n    // Specify the other units that are required for this test.\n    needs: []\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var model = this.subject();\n      // var store = this.store();\n      (0, _chai.expect)(model).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/routes/cities-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('route:cities', 'Unit | Route | cities', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/routes/cities/city-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('route:cities/city', 'Unit | Route | cities/city', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/routes/cities/city/add-data-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('route:cities/city/add-data', 'Unit | Route | cities/city/add data', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/routes/cities/city/edit-feature-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('route:cities/city/edit-feature', 'Unit | Route | cities/city/edit feature', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/routes/cities/city/edit-investment-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('route:cities/city/edit-investment', 'Unit | Route | cities/city/edit investment', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/routes/cities/city/edit-parcel-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('route:cities/city/edit-parcel', 'Unit | Route | cities/city/edit parcel', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/routes/cities/city/features-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('route:cities/city/features', 'Unit | Route | cities/city/features', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/routes/cities/city/features/index-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('route:cities/city/features/index', 'Unit | Route | cities/city/features/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/routes/cities/city/investments-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('route:cities/city/investments', 'Unit | Route | cities/city/investments', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/routes/cities/city/new-feature-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('route:cities/city/new-feature', 'Unit | Route | cities/city/new feature', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/routes/cities/city/new-investment-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('route:cities/city/new-investment', 'Unit | Route | cities/city/new investment', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/routes/cities/city/parcels-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('route:cities/city/parcels', 'Unit | Route | cities/city/parcels', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/serializers/district-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModel)('district', 'Unit | Serializer | district', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:district']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('serializes records', function () {\n      var record = this.subject();\n\n      var serializedRecord = record.serialize();\n\n      (0, _chai.expect)(serializedRecord).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/serializers/place-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModel)('place', 'Unit | Serializer | place', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:place']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('serializes records', function () {\n      var record = this.subject();\n\n      var serializedRecord = record.serialize();\n\n      (0, _chai.expect)(serializedRecord).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/services/current-city-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('service:current-city', 'Unit | Service | current city', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var service = this.subject();\n      (0, _chai.expect)(service).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/transforms/timeline-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('transform:timeline', 'Unit | Transform | timeline', {\n    // Specify the other units that are required for this test.\n    // needs: ['transform:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var transform = this.subject();\n      (0, _chai.expect)(transform).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/transforms/timelinne-test', ['chai', 'ember-mocha'], function (_chai, _emberMocha) {\n  'use strict';\n\n  (0, _emberMocha.describeModule)('transform:timelinne', 'Unit | Transform | timelinne', {\n    // Specify the other units that are required for this test.\n    // needs: ['transform:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var transform = this.subject();\n      (0, _chai.expect)(transform).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/utils/apply-filter-to-test', ['chai', 'mocha', 'cityxcity/utils/apply-filter-to'], function (_chai, _mocha, _applyFilterTo) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Utility | apply filter to', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _applyFilterTo.default)();\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/utils/arrayify-test', ['chai', 'mocha', 'cityxcity/utils/arrayify'], function (_chai, _mocha, _arrayify) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Utility | arrayify', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _arrayify.default)();\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/utils/csv-factory-test', ['chai', 'mocha', 'cityxcity/utils/csv-factory'], function (_chai, _mocha, _csvFactory) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Utility | csv factory', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _csvFactory.default)();\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/utils/get-latest-test', ['chai', 'mocha', 'cityxcity/utils/get-latest'], function (_chai, _mocha, _getLatest) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Utility | get latest', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _getLatest.default)();\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/utils/is-any-filter-test', ['chai', 'mocha', 'cityxcity/utils/is-any-filter'], function (_chai, _mocha, _isAnyFilter) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Utility | is any filter', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _isAnyFilter.default)([]);\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/utils/is-longitudinal-filter-test', ['chai', 'mocha', 'cityxcity/utils/is-longitudinal-filter'], function (_chai, _mocha, _isLongitudinalFilter) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Utility | is longitudinal filter', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _isLongitudinalFilter.default)();\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/utils/is-true-filter-test', ['chai', 'mocha', 'cityxcity/utils/is-true-filter'], function (_chai, _mocha, _isTrueFilter) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Utility | is true filter', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _isTrueFilter.default)();\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/utils/is-within-filter-test', ['chai', 'mocha', 'cityxcity/utils/is-within-filter'], function (_chai, _mocha, _isWithinFilter) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Utility | is within filter', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _isWithinFilter.default)([]);\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/utils/months-between-test', ['chai', 'mocha', 'cityxcity/utils/months-between'], function (_chai, _mocha, _monthsBetween) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Utility | months between', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _monthsBetween.default)();\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","define('cityxcity/tests/unit/utils/set-choropleth-color-test', ['chai', 'mocha', 'cityxcity/utils/set-choropleth-color'], function (_chai, _mocha, _setChoroplethColor) {\n  'use strict';\n\n  (0, _mocha.describe)('Unit | Utility | set choropleth color', function () {\n    // Replace this with your real tests.\n    (0, _mocha.it)('works', function () {\n      var result = (0, _setChoroplethColor.default)();\n      (0, _chai.expect)(result).to.be.ok;\n    });\n  });\n});","require('cityxcity/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappingsjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxjbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACffile":"tests.js"}